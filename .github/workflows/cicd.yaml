name: Terraform GKE Cluster Setup and Deploy

on:
  push:
    branches:
      - k8sdeploy
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Google Cloud Authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          create_credentials_file: true
          export_environment_variables: true
          universe: googleapis.com
          cleanup_credentials: true

      - name: Write GCP Credentials to File
        run: echo '${{ secrets.GCP_CREDENTIALS }}' > /tmp/gcp_credentials.json

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      - name: Terraform Init
        run: terraform init
        env:
          TF_VAR_credentials_path: "/tmp/gcp_credentials.json"

      - name: Terraform Apply
        run: terraform apply -auto-approve
        env:
          TF_VAR_credentials_path: "/tmp/gcp_credentials.json"

  deploy:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Google Cloud Authentication (again)
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          create_credentials_file: true
          export_environment_variables: true
          universe: googleapis.com
          cleanup_credentials: true

      - name: Install Google Cloud SDK
        run: |
          echo "Installing Google Cloud SDK"
          curl -sSL https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /etc/apt/trusted.gpg.d/google.asc
          echo "deb [signed-by=/etc/apt/trusted.gpg.d/google.asc] https://packages.cloud.google.com/apt cloud-sdk main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
          sudo apt-get update
          sudo apt-get install google-cloud-sdk

      - name: Install gke-gcloud-auth-plugin
        run: |
          echo "Installing gke-gcloud-auth-plugin"
          sudo apt-get install google-cloud-cli-gke-gcloud-auth-plugin

      - name: Configure kubectl
        run: |
          PROJECT_ID=$(echo '${{ secrets.GCP_CREDENTIALS }}' | jq -r .project_id)
          GCP_ZONE="us-east1-b"
          GCP_CLUSTER_NAME="flasksql-cluster"
          echo "Using GCP Zone: ${GCP_ZONE}"
          echo "Extracted Project ID: ${PROJECT_ID}"
          gcloud container clusters get-credentials ${GCP_CLUSTER_NAME} --zone ${GCP_ZONE} --project ${PROJECT_ID}

      - name: Create k8secret.yaml from GitHub Secrets
        run: |
          echo "apiVersion: v1
          kind: Secret
          metadata:
            name: mysql-secrets
          type: Opaque
          data:
            root_password: $(echo -n '${{ secrets.MYSQL_ROOT_PASSWORD }}' | base64)
            database_name: $(echo -n '${{ secrets.DATABASE_NAME }}' | base64)
            user: $(echo -n '${{ secrets.MYSQL_USER }}' | base64)
            password: $(echo -n '${{ secrets.MYSQL_PASSWORD }}' | base64)
          " > k8secret.yaml

      - name: Deploy Helm Chart
        run: |
          # Ensure the chart is installed/updated with the correct values
          helm upgrade --install flasksqlgifbase ./terraflaskqlk8s/terraflaskqlk8s-chart --namespace default -f values.yaml

      - name: Wait for LoadBalancer IP
        run: |
          echo "Waiting for the LoadBalancer IP to be assigned..."
          sleep 60

      - name: Verify Kubernetes Services
        run: |
          kubectl get services

      - name: Check Flask App Pods
        run: |
          echo "Checking if Flask app pods are running..."
          kubectl get pods
